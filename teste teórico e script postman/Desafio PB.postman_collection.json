{
	"info": {
		"_postman_id": "067d7563-24a3-483e-9ac8-315548f32b0e",
		"name": "Desafio PB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38276752"
	},
	"item": [
		{
			"name": "GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Retorna lista de usuários\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Cada usuário tem propriedades esperadas\", () => {\r",
							"    const user = pm.response.json()[0];\r",
							"    pm.expect(user).to.have.property(\"id\");\r",
							"    pm.expect(user).to.have.property(\"name\");\r",
							"    pm.expect(user).to.have.property(\"email\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://jsonplaceholder.typicode.com/users",
					"protocol": "http",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Retorno com ID do novo usuário\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validações de Schema - POST\", () => {\r",
							"    const schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"id\": { \"type\": \"number\" },\r",
							"            \"name\": { \"type\": \"string\" },\r",
							"            \"username\": { \"type\": \"string\" },\r",
							"            \"email\": { \"type\": \"string\" }\r",
							"        },\r",
							"        \"required\": [\"id\", \"name\", \"username\", \"email\"]\r",
							"    };\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Amanda TestePb\",\r\n  \"username\": \"amanda.teste\",\r\n  \"email\": \"amanda@teste.com\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://jsonplaceholder.typicode.com/users",
					"protocol": "http",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Dados retornados batem com enviados\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Amanda Editada\");\r",
							"    pm.expect(jsonData.email).to.eql(\"editada@teste.com\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Amanda Editada\",\r\n  \"username\": \"amanda.editada\",\r\n  \"email\": \"editada@teste.com\"\r\n}\r\n"
				},
				"url": {
					"raw": "http://jsonplaceholder.typicode.com/users/1",
					"protocol": "http",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Retorno é um objeto vazio\", () => {\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.expect(jsonData).to.be.an(\"object\").that.is.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Amanda Editada\",\r\n  \"username\": \"amanda.editada\",\r\n  \"email\": \"editada@teste.com\"\r\n}\r\n"
				},
				"url": {
					"raw": "http://jsonplaceholder.typicode.com/users/1",
					"protocol": "http",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		}
	]
}